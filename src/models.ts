/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type {ColumnType} from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export interface BaseFieldMappings {
  baseFieldID: string | null;
  fieldID: string | null;
  itemTypeID: string | null;
}

export interface BaseFieldMappingsCombined {
  baseFieldID: string | null;
  fieldID: string | null;
  itemTypeID: string | null;
}

export interface Charsets {
  charset: string | null;
  charsetID: number | null;
}

export interface CollectionItems {
  collectionID: string;
  itemID: string;
  orderIndex: Generated<string>;
}

export interface CollectionRelations {
  collectionID: string;
  object: string;
  predicateID: string;
}

export interface Collections {
  clientDateModified: Generated<string>;
  collectionID: number | null;
  collectionName: string;
  key: string;
  libraryID: string;
  parentCollectionID: Generated<string | null>;
  synced: Generated<string>;
  version: Generated<string>;
}

export interface Creators {
  creatorID: number | null;
  fieldMode: string | null;
  firstName: string | null;
  lastName: string | null;
}

export interface CreatorTypes {
  creatorType: string | null;
  creatorTypeID: number | null;
}

export interface CustomBaseFieldMappings {
  baseFieldID: string | null;
  customFieldID: string | null;
  customItemTypeID: string | null;
}

export interface CustomFields {
  customFieldID: number | null;
  fieldName: string | null;
  label: string | null;
}

export interface CustomItemTypeFields {
  customFieldID: string | null;
  customItemTypeID: string;
  fieldID: string | null;
  hide: string;
  orderIndex: string;
}

export interface CustomItemTypes {
  customItemTypeID: number | null;
  display: Generated<string | null>;
  icon: string | null;
  label: string | null;
  typeName: string | null;
}

export interface DbDebug1 {
  a: number | null;
}

export interface DeletedCollections {
  collectionID: number | null;
  dateDeleted: Generated<string>;
}

export interface DeletedItems {
  dateDeleted: Generated<string>;
  itemID: number | null;
}

export interface DeletedSearches {
  dateDeleted: Generated<string>;
  savedSearchID: number | null;
}

export interface FeedItems {
  guid: string;
  itemID: number | null;
  readTime: string | null;
  translatedTime: string | null;
}

export interface Feeds {
  cleanupReadAfter: string | null;
  cleanupUnreadAfter: string | null;
  lastCheck: string | null;
  lastCheckError: string | null;
  lastUpdate: string | null;
  libraryID: number | null;
  name: string;
  refreshInterval: string | null;
  url: string;
}

export interface FieldFormats {
  fieldFormatID: number | null;
  isInteger: string | null;
  regex: string | null;
}

export interface Fields {
  fieldFormatID: string | null;
  fieldID: number | null;
  fieldName: string | null;
}

export interface FieldsCombined {
  custom: string;
  fieldFormatID: string | null;
  fieldID: string;
  fieldName: string;
  label: string | null;
}

export interface FileTypeMimeTypes {
  fileTypeID: string | null;
  mimeType: string | null;
}

export interface FileTypes {
  fileType: string | null;
  fileTypeID: number | null;
}

export interface FulltextItems {
  indexedChars: string | null;
  indexedPages: string | null;
  itemID: number | null;
  synced: Generated<string>;
  totalChars: string | null;
  totalPages: string | null;
  version: Generated<string>;
}

export interface FulltextItemWords {
  itemID: string | null;
  wordID: string | null;
}

export interface FulltextWords {
  word: string | null;
  wordID: number | null;
}

export interface GroupItems {
  createdByUserID: string | null;
  itemID: number | null;
  lastModifiedByUserID: string | null;
}

export interface Groups {
  description: string;
  groupID: number | null;
  libraryID: string;
  name: string;
  version: string;
}

export interface ItemAnnotations {
  authorName: string | null;
  color: string | null;
  comment: string | null;
  isExternal: string;
  itemID: number | null;
  pageLabel: string | null;
  parentItemID: string;
  position: string;
  sortIndex: string;
  text: string | null;
  type: number;
}

export interface ItemAttachments {
  charsetID: string | null;
  contentType: string | null;
  itemID: number | null;
  lastProcessedModificationTime: string | null;
  linkMode: string | null;
  parentItemID: string | null;
  path: string | null;
  storageHash: string | null;
  storageModTime: string | null;
  syncState: Generated<string | null>;
}

export interface ItemCreators {
  creatorID: string;
  creatorTypeID: Generated<string>;
  itemID: string;
  orderIndex: Generated<string>;
}

export interface ItemData {
  fieldID: string | null;
  itemID: string | null;
  valueID: string | null;
}

export interface ItemDataValues {
  value: string | null;
  valueID: number | null;
}

export interface ItemNotes {
  itemID: number | null;
  note: string | null;
  parentItemID: string | null;
  title: string | null;
}

export interface ItemRelations {
  itemID: string;
  object: string;
  predicateID: string;
}

export interface Items {
  clientDateModified: Generated<string>;
  dateAdded: Generated<string>;
  dateModified: Generated<string>;
  itemID: number | null;
  itemTypeID: string;
  key: string;
  libraryID: string;
  synced: Generated<string>;
  version: Generated<string>;
}

export interface ItemTags {
  itemID: string;
  tagID: string;
  type: string;
}

export interface ItemTypeCreatorTypes {
  creatorTypeID: string | null;
  itemTypeID: string | null;
  primaryField: string | null;
}

export interface ItemTypeFields {
  fieldID: string | null;
  hide: string | null;
  itemTypeID: string | null;
  orderIndex: string | null;
}

export interface ItemTypeFieldsCombined {
  fieldID: string;
  hide: string | null;
  itemTypeID: string;
  orderIndex: string;
}

export interface ItemTypes {
  display: Generated<string | null>;
  itemTypeID: number | null;
  templateItemTypeID: string | null;
  typeName: string | null;
}

export interface ItemTypesCombined {
  custom: string;
  display: Generated<string>;
  itemTypeID: string;
  typeName: string;
}

export interface Libraries {
  archived: Generated<string>;
  editable: string;
  filesEditable: string;
  lastSync: Generated<string>;
  libraryID: number | null;
  storageVersion: Generated<string>;
  type: string;
  version: Generated<string>;
}

export interface Proxies {
  autoAssociate: string | null;
  multiHost: string | null;
  proxyID: number | null;
  scheme: string | null;
}

export interface ProxyHosts {
  hostID: number | null;
  hostname: string | null;
  proxyID: number | null;
}

export interface PublicationsItems {
  itemID: number | null;
}

export interface RelationPredicates {
  predicate: string | null;
  predicateID: number | null;
}

export interface RetractedItems {
  data: string | null;
  flag: Generated<string | null>;
  itemID: number | null;
}

export interface SavedSearchConditions {
  condition: string;
  operator: string | null;
  required: string | null;
  savedSearchID: string;
  searchConditionID: string;
  value: string | null;
}

export interface SavedSearches {
  clientDateModified: Generated<string>;
  key: string;
  libraryID: string;
  savedSearchID: number | null;
  savedSearchName: string;
  synced: Generated<string>;
  version: Generated<string>;
}

export interface Settings {
  key: string | null;
  setting: string | null;
  value: string | null;
}

export interface StorageDeleteLog {
  dateDeleted: Generated<string>;
  key: string;
  libraryID: string;
}

export interface SyncCache {
  data: string | null;
  key: string;
  libraryID: string;
  syncObjectTypeID: string;
  version: string;
}

export interface SyncDeleteLog {
  dateDeleted: Generated<string>;
  key: string;
  libraryID: string;
  syncObjectTypeID: string;
}

export interface SyncedSettings {
  libraryID: string;
  setting: string;
  synced: Generated<string>;
  value: string;
  version: Generated<string>;
}

export interface SyncObjectTypes {
  name: string | null;
  syncObjectTypeID: number | null;
}

export interface SyncQueue {
  key: string;
  lastCheck: string | null;
  libraryID: string;
  syncObjectTypeID: string;
  tries: string | null;
}

export interface Tags {
  name: string;
  tagID: number | null;
}

export interface TranslatorCache {
  fileName: string | null;
  lastModifiedTime: string | null;
  metadataJSON: string | null;
}

export interface Users {
  name: string;
  userID: number | null;
}

export interface Version {
  schema: string | null;
  version: string;
}

export interface DB {
  baseFieldMappings: BaseFieldMappings;
  baseFieldMappingsCombined: BaseFieldMappingsCombined;
  charsets: Charsets;
  collectionItems: CollectionItems;
  collectionRelations: CollectionRelations;
  collections: Collections;
  creators: Creators;
  creatorTypes: CreatorTypes;
  customBaseFieldMappings: CustomBaseFieldMappings;
  customFields: CustomFields;
  customItemTypeFields: CustomItemTypeFields;
  customItemTypes: CustomItemTypes;
  dbDebug1: DbDebug1;
  deletedCollections: DeletedCollections;
  deletedItems: DeletedItems;
  deletedSearches: DeletedSearches;
  feedItems: FeedItems;
  feeds: Feeds;
  fieldFormats: FieldFormats;
  fields: Fields;
  fieldsCombined: FieldsCombined;
  fileTypeMimeTypes: FileTypeMimeTypes;
  fileTypes: FileTypes;
  fulltextItems: FulltextItems;
  fulltextItemWords: FulltextItemWords;
  fulltextWords: FulltextWords;
  groupItems: GroupItems;
  groups: Groups;
  itemAnnotations: ItemAnnotations;
  itemAttachments: ItemAttachments;
  itemCreators: ItemCreators;
  itemData: ItemData;
  itemDataValues: ItemDataValues;
  itemNotes: ItemNotes;
  itemRelations: ItemRelations;
  items: Items;
  itemTags: ItemTags;
  itemTypeCreatorTypes: ItemTypeCreatorTypes;
  itemTypeFields: ItemTypeFields;
  itemTypeFieldsCombined: ItemTypeFieldsCombined;
  itemTypes: ItemTypes;
  itemTypesCombined: ItemTypesCombined;
  libraries: Libraries;
  proxies: Proxies;
  proxyHosts: ProxyHosts;
  publicationsItems: PublicationsItems;
  relationPredicates: RelationPredicates;
  retractedItems: RetractedItems;
  savedSearchConditions: SavedSearchConditions;
  savedSearches: SavedSearches;
  settings: Settings;
  storageDeleteLog: StorageDeleteLog;
  syncCache: SyncCache;
  syncDeleteLog: SyncDeleteLog;
  syncedSettings: SyncedSettings;
  syncObjectTypes: SyncObjectTypes;
  syncQueue: SyncQueue;
  tags: Tags;
  translatorCache: TranslatorCache;
  users: Users;
  version: Version;
}

// AUTOGENERATED BY generate_models.py -- do not edit
export const MODEL_VERSIONS = {
  globalSchema: 32,
  system: 32,
  userdata: 123,
  triggers: 18,
  compatibility: 7,
  translators: 1731981919,
  delete: 74,
  styles: 1731981919,
  repository: 1732075580,
  lastcheck: 1732075581,
};
// END AUTOGENERATED BY generate_models.py
